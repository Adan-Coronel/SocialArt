extends layout

block content
  link(rel="stylesheet", href="/perfil.css")

  h1 Bienvenido/a, #{user.nombre}

  if user.foto
    img(src=user.foto width="150")

  p Intereses: #{user.intereses || 'No especificados'}
  p Antecedentes: #{user.antecedentes || 'No especificados'}
  button(onclick="mostrarModalEditar()") Editar perfil
  button(onclick="mostrarModalContrasena()") Cambiar contraseña
  h2 Tus álbumes
  button(onclick="mostrarModalAlbum()") Crear nuevo álbum

  if user.albums.length
    each album in user.albums
      div.album-propio
        h3= album.titulo
        if album.is_public
          span (Público)
        else
          span (Privado)
        a(href=`/albums/${album.idAlbum}`) Ver
        button(type="button", onclick=`mostrarModalEditarAlbum(${album.idAlbum}, '${album.titulo}', ${album.is_public})`) Editar
        button(type="button", onclick=`window.location.href='/visibilidad/${album.idAlbum}'`) Configurar visibilidad
        button(type="button", onclick=`abrirModalEliminar(${album.idAlbum})`) Eliminar
  else
    p Todavía no tenés álbumes propios.
  
  
  if albumesCompartidos && albumesCompartidos.length
    h2 Álbumes compartidos contigo
    p.info-compartidos Estos álbumes contienen imágenes que otros usuarios han decidido compartir contigo.
    
    each shared in albumesCompartidos
      div.album-compartido
        h3= shared.Album.titulo
        span (Compartido)
        a(href=`/albums/${shared.Album.idAlbum}`) Ver
        small Compartido por: #{shared.propietario.nombre}

  .modal#modalAlbum
    .modal-fondo(onclick="cerrarModalAlbum()")
    .modal-contenido
      h2 Nuevo álbum
      form(action="/albums", method="POST")
        label Título:
        input(type="text", name="titulo", required)

        label Público:
        input(type="checkbox", name="is_public")

        label Tags (máximo 5):
        .tags-selector
          select#tagsSelect(size="8")
          .tags-seleccionadas
            p.limite-tags Puedes seleccionar hasta 5 tags
            .tags-lista
        select#tagsSelect(name="tags", multiple, size="8")

        button(type="submit") Crear
        button(type="button", onclick="cerrarModalAlbum()") Cancelar
  .modal#modalEditarAlbum
    .modal-fondo(onclick="cerrarModalEditarAlbum()")
    .modal-contenido
      h2 Editar álbum
      form(id="formEditarAlbum", method="POST")
        label Título:
        input(type="text", name="titulo", id="editTitulo", required)
        label Público:
        input(type="checkbox", name="is_public", id="editPublico")
        label Tags (máximo 5):
        .tags-selector
          select#editTagsSelect(size="8")
          .tags-seleccionadas
            p.limite-tags Puedes seleccionar hasta 5 tags
            .tags-lista#editTagsLista

        button(type="submit") Guardar cambios
        button(type="button", onclick="cerrarModalEditarAlbum()") Cancelar
  .modal#modalEditar
    .modal-fondo(onclick="cerrarModalEditar()")
    .modal-contenido
      h2 Editar perfil
      form(action="/perfil/editar", method="POST", enctype="multipart/form-data")
        label Nombre:
        input(type="text", name="nombre", value=user.nombre)

        label Intereses:
        input(type="text", name="intereses", value=user.intereses)
        
        label Antecedentes (estudios, logros, experiencia):
        textarea(name="antecedentes", rows="4", placeholder="Describe tu formación, experiencia o logros como artista")= user.antecedentes
        
        label Foto de perfil:
        input(type="file", name="foto")

        button(type="submit") Guardar
        button(type="button", onclick="cerrarModalEditar()") Cancelar

  .modal#modalContrasena
    .modal-fondo(onclick="cerrarModalContrasena()")
    .modal-contenido
      h2 Cambiar contraseña
      .caps-warning#capsWarning(style="display: none;")
        | ⚠️ Las mayúsculas están activadas
      .error-container#errorContrasena(style="display: none;")
      form(action="/perfil/cambiar-contrasena", method="POST", onsubmit="return cambiarContrasena(event)")
        label Contraseña actual:
        input(type="password", name="contrasenaActual", id="contrasenaActual", required, onkeyup="checkCapsLock(event)")

        label Nueva contraseña:
        input(type="password", name="nuevaContrasena", id="nuevaContrasena", required, onkeyup="checkCapsLock(event)")

        label Confirmar nueva contraseña:
        input(type="password", name="confirmarContrasena", id="confirmarContrasena", required, onkeyup="checkCapsLock(event)")

        button(type="submit") Cambiar contraseña
        button(type="button", onclick="cerrarModalContrasena()") Cancelar
  .modal#modalEliminar
    .modal-fondo(onclick="cerrarModalEliminar()")
    .modal-contenido
      h2 ¿Estás seguro/a de que querés eliminar este álbum?
      form(id="formEliminar", method="POST")
        button(type="submit") Confirmar
        button(type="button", onclick="cerrarModalEliminar()") Cancelar

  script.
    let tagsDisponibles = [];
    let tagsSeleccionadas = [];
    let albumEditando = null;

    function checkCapsLock(event) {
      const capsWarning = document.getElementById('capsWarning');
      
      if (event.getModifierState && event.getModifierState('CapsLock')) {
        capsWarning.style.display = 'block';
      } else {
        capsWarning.style.display = 'none';
      }
    }
    async function cargarTags() {
      try {
        const response = await fetch('/tags/api/todas');
        const data = await response.json();
        
        if (data.success) {
          tagsDisponibles = data.tags;
          mostrarTagsEnSelect('tagsSelect');
          mostrarTagsEnSelect('editTagsSelect');
        }
      } catch (err) {
        console.error('Error al cargar tags:', err);
      }
    }
    function mostrarTagsEnSelect(selectId) {
      const select = document.getElementById(selectId);
      select.innerHTML = '';
      
      tagsDisponibles.forEach(tag => {
        const option = document.createElement('option');
        option.value = tag.idTag;
        option.textContent = tag.nombreTag;
        option.onclick = () => agregarTag(tag, selectId === 'editTagsSelect');
        select.appendChild(option);
      });
    }

    function agregarTag(tag, esEdicion = false) {
      const lista = esEdicion ? 'editTagsLista' : 'tags-lista';
      const contenedor = document.querySelector(esEdicion ? '#editTagsLista' : '.tags-lista');

      const tagsActuales = contenedor.querySelectorAll('.tag-seleccionada');
      if (tagsActuales.length >= 5) {
        alert('Solo puedes seleccionar hasta 5 tags');
        return;
      }

      if (contenedor.querySelector(`[data-tag-id="${tag.idTag}"]`)) {
        return;
      }

      const tagElement = document.createElement('div');
      tagElement.className = 'tag-seleccionada';
      tagElement.setAttribute('data-tag-id', tag.idTag);
      tagElement.innerHTML = `
        <span>${tag.nombreTag}</span>
        <button type="button" onclick="quitarTag(${tag.idTag}, ${esEdicion})" class="quitar-tag">×</button>
        <input type="hidden" name="tags" value="${tag.idTag}">
      `;
      
      contenedor.appendChild(tagElement);
    }

    function quitarTag(tagId, esEdicion = false) {
      const contenedor = document.querySelector(esEdicion ? '#editTagsLista' : '.tags-lista');
      const tagElement = contenedor.querySelector(`[data-tag-id="${tagId}"]`);
      if (tagElement) {
        tagElement.remove();
      }
    }
    function mostrarModalAlbum() {
      cargarTags();
      document.getElementById('modalAlbum').style.display = 'flex';
    }
    function cerrarModalAlbum() {
      document.getElementById('modalAlbum').style.display = 'none';
      document.querySelector('.tags-lista').innerHTML = '';
    }
    function mostrarModalEditarAlbum(albumId, titulo, esPublico) {
      albumEditando = albumId;
      document.getElementById('editTitulo').value = titulo;
      document.getElementById('editPublico').checked = esPublico;
      document.getElementById('formEditarAlbum').action = `/albums/${albumId}/editar`;

      document.getElementById('editTagsLista').innerHTML = '';
      
      cargarTags();
      document.getElementById('modalEditarAlbum').style.display = 'flex';
    }
    function cerrarModalEditarAlbum() {
      document.getElementById('modalEditarAlbum').style.display = 'none';
      document.getElementById('editTagsLista').innerHTML = '';
      albumEditando = null;
    }
    function mostrarModalEditar() {
      document.getElementById('modalEditar').style.display = 'flex';
    }
    function cerrarModalEditar() {
      document.getElementById('modalEditar').style.display = 'none';
    }
    function mostrarModalContrasena() {
      document.getElementById('modalContrasena').style.display = 'flex';
      const errorContainer = document.getElementById('errorContrasena');
      errorContainer.style.display = 'none';
      errorContainer.innerHTML = '';
      document.getElementById('capsWarning').style.display = 'none';
    }
    function cerrarModalContrasena() {
      document.getElementById('modalContrasena').style.display = 'none';
      document.getElementById('contrasenaActual').value = '';
      document.getElementById('nuevaContrasena').value = '';
      document.getElementById('confirmarContrasena').value = '';
    }
    async function cambiarContrasena2(event) {
      event.preventDefault();
      
      const form = event.target;
      const formData = new FormData(form);
      const errorContainer = document.getElementById('errorContrasena');
      
      try {
        const response = await fetch('/perfil/cambiar-contrasena', {
          method: 'POST',
          body: formData
        });
        
        if (response.ok) {
          alert('Contraseña cambiada exitosamente');
          cerrarModalContrasena();
          form.reset();
        } else {
          const errorText = await response.text();
          errorContainer.innerHTML = `<p style="color: red; margin: 0;">${errorText}</p>`;
          errorContainer.style.display = 'block';
        }
      } catch (err) {
        errorContainer.innerHTML = `<p style="color: red; margin: 0;">Error de conexión</p>`;
        errorContainer.style.display = 'block';
      }
      
      return false;
    }
    async function cambiarContrasena(event) {
      event.preventDefault();

      const form = event.target;
      const contrasenaActual = form.querySelector('#contrasenaActual').value;
      const nuevaContrasena   = form.querySelector('#nuevaContrasena').value;
      const confirmarContrasena = form.querySelector('#confirmarContrasena').value;

      const errorContainer = document.getElementById('errorContrasena');
      errorContainer.innerHTML = '';
      errorContainer.style.display = 'none';

      try {
        const response = await fetch('/perfil/cambiar-contrasena', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            contrasenaActual,
            nuevaContrasena,
            confirmarContrasena
          })
        });

        const data = await response.json();
        if (!data.success) {
          errorContainer.innerHTML = `<p style="color: red; margin: 0;">${data.error}</p>`;
          errorContainer.style.display = 'block';
        } else {
          alert(data.message || 'Contraseña cambiada exitosamente');
          cerrarModalContrasena();
          form.reset();
        }
      } catch (err) {
        console.error("Error en fetch o parseo:", err);
        errorContainer.innerHTML = `<p style="color: red; margin: 0;">Error de conexión</p>`;
        errorContainer.style.display = 'block';
      }

      return false;
    }
    function abrirModalEliminar(id) {
      document.getElementById('modalEliminar').style.display = 'flex';
      document.getElementById('formEliminar').action = `/albums/${id}/eliminar`;
    }
    function cerrarModalEliminar() {
      document.getElementById('modalEliminar').style.display = 'none';
    }
